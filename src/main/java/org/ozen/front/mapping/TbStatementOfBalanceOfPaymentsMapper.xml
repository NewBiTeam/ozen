<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ozen.front.dao.TbStatementOfBalanceOfPaymentsMapper" >
  <resultMap id="BaseResultMap" type="org.ozen.front.entity.TbStatementOfBalanceOfPayments" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="balances" property="balances" jdbcType="DOUBLE" />
    <result column="budget" property="budget" jdbcType="DOUBLE" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, balances, budget, creat_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_statementofbalanceofpayments
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_statementofbalanceofpayments
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.ozen.front.entity.TbStatementOfBalanceOfPayments" >
    insert into tb_statementofbalanceofpayments (id, user_id, balances, 
      budget, creat_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{balances,jdbcType=DOUBLE}, 
      #{budget,jdbcType=DOUBLE}, #{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.ozen.front.entity.TbStatementOfBalanceOfPayments" >
    insert into tb_statementofbalanceofpayments
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="balances != null" >
        balances,
      </if>
      <if test="budget != null" >
        budget,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="balances != null" >
        #{balances,jdbcType=DOUBLE},
      </if>
      <if test="budget != null" >
        #{budget,jdbcType=DOUBLE},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.ozen.front.entity.TbStatementOfBalanceOfPayments" >
    update tb_statementofbalanceofpayments
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="balances != null" >
        balances = #{balances,jdbcType=DOUBLE},
      </if>
      <if test="budget != null" >
        budget = #{budget,jdbcType=DOUBLE},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ozen.front.entity.TbStatementOfBalanceOfPayments" >
    update tb_statementofbalanceofpayments
    set user_id = #{userId,jdbcType=INTEGER},
      balances = #{balances,jdbcType=DOUBLE},
      budget = #{budget,jdbcType=DOUBLE},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>