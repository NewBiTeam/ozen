<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.ozen.front.dao.TbBillRecordMapper" >
  <resultMap id="BaseResultMap" type="org.ozen.front.entity.TbBillRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="describes" property="describes" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="cate_id" property="cateId" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, describes, money, cate_id, time, type, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_bill_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_bill_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
 <insert id="add" parameterType="org.ozen.front.entity.TbBillRecord" >
	insert into tb_bill_record (user_id,
	describes,money,cate_id,type,status)
	values (#{userId,jdbcType=INTEGER},
	#{describes,jdbcType=VARCHAR},#{money,jdbcType=INTEGER},
	#{cateId,jdbcType=INTEGER},#{type,jdbcType=INTEGER},
	#{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.ozen.front.entity.TbBillRecord" >
    insert into tb_bill_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="describes != null" >
        describes,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="cateId != null" >
        cate_id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="describes != null" >
        #{describes,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="cateId != null" >
        #{cateId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.ozen.front.entity.TbBillRecord" >
    update tb_bill_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="describes != null" >
        describes = #{describes,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="cateId != null" >
        cate_id = #{cateId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ozen.front.entity.TbBillRecord" >
    update tb_bill_record
    set user_id = #{userId,jdbcType=INTEGER},
      describes = #{describes,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      cate_id = #{cateId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>